/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as KitchenImport } from './routes/kitchen'
import { Route as GalleryImport } from './routes/gallery'
import { Route as IndexImport } from './routes/index'
import { Route as TodosIndexImport } from './routes/todos/index'
import { Route as PostsIndexImport } from './routes/posts/index'
import { Route as TodosIdImport } from './routes/todos/$id'
import { Route as PostsIdImport } from './routes/posts/$id'
import { Route as AuthProfileImport } from './routes/_auth/profile'
import { Route as AuthLoginImport } from './routes/_auth/login'

// Create/Update Routes

const KitchenRoute = KitchenImport.update({
  id: '/kitchen',
  path: '/kitchen',
  getParentRoute: () => rootRoute,
} as any)

const GalleryRoute = GalleryImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TodosIndexRoute = TodosIndexImport.update({
  id: '/todos/',
  path: '/todos/',
  getParentRoute: () => rootRoute,
} as any)

const PostsIndexRoute = PostsIndexImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRoute,
} as any)

const TodosIdRoute = TodosIdImport.update({
  id: '/todos/$id',
  path: '/todos/$id',
  getParentRoute: () => rootRoute,
} as any)

const PostsIdRoute = PostsIdImport.update({
  id: '/posts/$id',
  path: '/posts/$id',
  getParentRoute: () => rootRoute,
} as any)

const AuthProfileRoute = AuthProfileImport.update({
  id: '/_auth/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/gallery': {
      id: '/gallery'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryImport
      parentRoute: typeof rootRoute
    }
    '/kitchen': {
      id: '/kitchen'
      path: '/kitchen'
      fullPath: '/kitchen'
      preLoaderRoute: typeof KitchenImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/profile': {
      id: '/_auth/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileImport
      parentRoute: typeof rootRoute
    }
    '/posts/$id': {
      id: '/posts/$id'
      path: '/posts/$id'
      fullPath: '/posts/$id'
      preLoaderRoute: typeof PostsIdImport
      parentRoute: typeof rootRoute
    }
    '/todos/$id': {
      id: '/todos/$id'
      path: '/todos/$id'
      fullPath: '/todos/$id'
      preLoaderRoute: typeof TodosIdImport
      parentRoute: typeof rootRoute
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexImport
      parentRoute: typeof rootRoute
    }
    '/todos/': {
      id: '/todos/'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof TodosIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/gallery': typeof GalleryRoute
  '/kitchen': typeof KitchenRoute
  '/login': typeof AuthLoginRoute
  '/profile': typeof AuthProfileRoute
  '/posts/$id': typeof PostsIdRoute
  '/todos/$id': typeof TodosIdRoute
  '/posts': typeof PostsIndexRoute
  '/todos': typeof TodosIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/gallery': typeof GalleryRoute
  '/kitchen': typeof KitchenRoute
  '/login': typeof AuthLoginRoute
  '/profile': typeof AuthProfileRoute
  '/posts/$id': typeof PostsIdRoute
  '/todos/$id': typeof TodosIdRoute
  '/posts': typeof PostsIndexRoute
  '/todos': typeof TodosIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/gallery': typeof GalleryRoute
  '/kitchen': typeof KitchenRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/profile': typeof AuthProfileRoute
  '/posts/$id': typeof PostsIdRoute
  '/todos/$id': typeof TodosIdRoute
  '/posts/': typeof PostsIndexRoute
  '/todos/': typeof TodosIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/gallery'
    | '/kitchen'
    | '/login'
    | '/profile'
    | '/posts/$id'
    | '/todos/$id'
    | '/posts'
    | '/todos'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/gallery'
    | '/kitchen'
    | '/login'
    | '/profile'
    | '/posts/$id'
    | '/todos/$id'
    | '/posts'
    | '/todos'
  id:
    | '__root__'
    | '/'
    | '/gallery'
    | '/kitchen'
    | '/_auth/login'
    | '/_auth/profile'
    | '/posts/$id'
    | '/todos/$id'
    | '/posts/'
    | '/todos/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  GalleryRoute: typeof GalleryRoute
  KitchenRoute: typeof KitchenRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthProfileRoute: typeof AuthProfileRoute
  PostsIdRoute: typeof PostsIdRoute
  TodosIdRoute: typeof TodosIdRoute
  PostsIndexRoute: typeof PostsIndexRoute
  TodosIndexRoute: typeof TodosIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  GalleryRoute: GalleryRoute,
  KitchenRoute: KitchenRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthProfileRoute: AuthProfileRoute,
  PostsIdRoute: PostsIdRoute,
  TodosIdRoute: TodosIdRoute,
  PostsIndexRoute: PostsIndexRoute,
  TodosIndexRoute: TodosIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/gallery",
        "/kitchen",
        "/_auth/login",
        "/_auth/profile",
        "/posts/$id",
        "/todos/$id",
        "/posts/",
        "/todos/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/gallery": {
      "filePath": "gallery.tsx"
    },
    "/kitchen": {
      "filePath": "kitchen.tsx"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx"
    },
    "/_auth/profile": {
      "filePath": "_auth/profile.tsx"
    },
    "/posts/$id": {
      "filePath": "posts/$id.tsx"
    },
    "/todos/$id": {
      "filePath": "todos/$id.tsx"
    },
    "/posts/": {
      "filePath": "posts/index.tsx"
    },
    "/todos/": {
      "filePath": "todos/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
