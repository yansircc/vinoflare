/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TasksIndexRouteImport } from './routes/tasks/index'
import { Route as TasksIdRouteImport } from './routes/tasks/$id'
import { Route as AuthProfileRouteImport } from './routes/_auth/profile'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksIndexRoute = TasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksIdRoute = TasksIdRouteImport.update({
  id: '/tasks/$id',
  path: '/tasks/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthProfileRoute = AuthProfileRouteImport.update({
  id: '/_auth/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/profile': typeof AuthProfileRoute
  '/tasks/$id': typeof TasksIdRoute
  '/tasks': typeof TasksIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginRoute
  '/profile': typeof AuthProfileRoute
  '/tasks/$id': typeof TasksIdRoute
  '/tasks': typeof TasksIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/profile': typeof AuthProfileRoute
  '/tasks/$id': typeof TasksIdRoute
  '/tasks/': typeof TasksIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/profile' | '/tasks/$id' | '/tasks'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/profile' | '/tasks/$id' | '/tasks'
  id:
    | '__root__'
    | '/'
    | '/_auth/login'
    | '/_auth/profile'
    | '/tasks/$id'
    | '/tasks/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthProfileRoute: typeof AuthProfileRoute
  TasksIdRoute: typeof TasksIdRoute
  TasksIndexRoute: typeof TasksIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/': {
      id: '/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/$id': {
      id: '/tasks/$id'
      path: '/tasks/$id'
      fullPath: '/tasks/$id'
      preLoaderRoute: typeof TasksIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/profile': {
      id: '/_auth/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthProfileRoute: AuthProfileRoute,
  TasksIdRoute: TasksIdRoute,
  TasksIndexRoute: TasksIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
