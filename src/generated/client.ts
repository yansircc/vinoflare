// Auto-generated API client
// Generated at: 2025-06-23T05:13:02.697Z
// DO NOT EDIT THIS FILE MANUALLY

export class ApiError extends Error {
	constructor(
		public status: number,
		message: string,
		public data?: any,
	) {
		super(message);
		this.name = "ApiError";
	}
}

async function request<T>(path: string, options?: RequestInit): Promise<T> {
	const response = await fetch(path, {
		...options,
		headers: {
			"Content-Type": "application/json",
			...options?.headers,
		},
	});

	if (!response.ok) {
		let errorData: any;
		try {
			errorData = await response.json();
		} catch {
			errorData = null;
		}
		throw new ApiError(response.status, response.statusText, errorData);
	}

	if (response.status === 204) {
		return null as T;
	}

	return response.json();
}

export const apiClient = {
	tasks: {
		list: () => request<Task[]>("/api/tasks"),

		get: (id: number) => request<Task>(`/api/tasks/${id}`),

		create: (data: NewTask) =>
			request<Task>("/api/tasks", {
				method: "POST",
				body: JSON.stringify(data),
			}),

		update: (id: number, data: PatchTask) =>
			request<Task>(`/api/tasks/${id}`, {
				method: "PATCH",
				body: JSON.stringify(data),
			}),

		delete: (id: number) =>
			request<void>(`/api/tasks/${id}`, {
				method: "DELETE",
			}),
	},

	health: () =>
		request<{
			status: string;
			timestamp: string;
			version: string;
			environment: string;
		}>("/api/health"),

	me: () =>
		request<{
			user: AuthUser | null;
			session: AuthSession | null;
		}>("/api/me"),
};

// 从 schema 导入的类型
export type Task = {
	id: number;
	name: string;
	done: boolean;
	createdAt: string | null;
	updatedAt: string | null;
};

export type NewTask = {
	name: string;
	done?: boolean;
};

export type PatchTask = Partial<NewTask>;

export type AuthUser = {
	id: string;
	name: string;
	email: string;
	emailVerified: boolean;
	image: string | null;
	createdAt: Date;
	updatedAt: Date;
};

export type AuthSession = {
	id: string;
	userId: string;
	userAgent: string | null;
	ipAddress: string | null;
	expiresAt: Date;
	createdAt: Date;
	updatedAt: Date;
};
