/**
 * Auto-generated Standalone RPC Client
 * This file is automatically generated by scripts/generate-rpc-client.ts
 * DO NOT EDIT MANUALLY - Run 'bun run gen:client' to regenerate
 * 
 * Generated at: 2025-07-05T11:04:28.673Z
 */

import { Hono } from "hono";
import { hc } from "hono/client";
import type { BaseContext } from "@/server/lib/worker-types";

// Import all RPC routes and types
import { helloRpcRoutes, type HelloRpcType } from "@/server/modules/hello/hello.rpc";
import { todoRpcRoutes, type TodoRpcType } from "@/server/modules/todo/todo.rpc";

// Build the combined app type inline (no need for rpc-exports.ts!)
const _combinedApp = new Hono<BaseContext>()
	.route("/hello", helloRpcRoutes)
	.route("/todo", todoRpcRoutes);

// Create the main API client
export const apiClient = hc<typeof _combinedApp>("/api");

// Re-export the type for convenience
export type ApiClient = typeof apiClient;

// Export individual module types for advanced usage
export type { HelloRpcType, TodoRpcType };

/* Usage Examples:

// Direct usage (no 'index' needed!)
const todos = await apiClient.todo.$get();
const hello = await apiClient.hello.$get();

// Using helper functions
const todos = await todo.get();
const newTodo = await todo.post({ json: { title: "New Task" } });
const specificTodo = await todo.byId(123).get();

*/